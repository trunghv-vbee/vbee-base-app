name: Deployment

on:
  push:
    branches:
      - feature/add-cicd-fastlane
jobs:
  android:
    name: Build Android
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "17.x"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies # install project deps with --frozen-lockfile to make sure we will have the same packages version ( very recommended  on running yarn install on ci)
        run: yarn install --frozen-lockfile

        # Setup Ruby while Caching Gems
      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2
          bundler-cache: true

          # Install fastlane
      - name: Install Fastlane
        run: gem install fastlane

      - name: Set up Keystore
        run: |
          echo -n "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/vbee.keystore

      - name: Build iOS application
        env:
          ENV: development
          APPCENTER_API_TOKEN: ${{secrets.APPCENTER_API_TOKEN_ANDROID}}
          APPCENTER_OWNER_NAME: "trunghv-vbee.ai"
          APPCENTER_APP_NAME: "APP"
          PACKAGE_NAME: "vn.vbee.base"
          VERSION: "0.0.1"
          SERVICE_ACCOUNT_JSON: "./app/service_account.json"
        run: cd android && fastlane buildAndDeploy --verbose
  ios:
    name: Build IOS
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies # install project deps with --frozen-lockfile to make sure we will have the same packages version ( very recommended  on running yarn install on ci)
        run: yarn install --frozen-lockfile

      - name: Setup iOS signing certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_DEVELOPMENT_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_DEVELOPMENT_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # Create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          
          # Import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH
          
          # Create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          
          # Import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
          
          # Apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

        # Setup Ruby while Caching Gems
      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2
          bundler-cache: true

          # Install fastlane
      - name: Install Fastlane
        run: gem install fastlane

      - name: Build iOS application
        env:
          ENV: development
          APPCENTER_API_TOKEN: ${{secrets.APPCENTER_API_TOKEN_IOS}}
          APPCENTER_OWNER_NAME: "trunghv-vbee.ai"
          APPCENTER_APP_NAME: "APP-IOS"
          PACKAGE_NAME: "vn.vbee.base"
          VERSION: "0.0.1"
          CERTIFICATE_PATH: $RUNNER_TEMP/build_certificate.p12
          PROVISION_PROFILE_PATH: $RUNNER_TEMP/build_pp.mobileprovision
          P12_PASSWORD:  ${{secrets.P12_PASSWORD}}
        run: cd ios && fastlane buildAndDeploy --verbose
